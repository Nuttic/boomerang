// // –í—Ä–∞–≥.

// class Enemy {
//   constructor({position}) {
//     this.generateSkin();
//     this.position = position;
//   }

//   generateSkin() {
//     const skins = ['üëæ', 'üíÄ', 'üëπ', 'üëª', 'üëΩ', 'üëø', 'üí©', 'ü§°', 'ü§∫', 'üßõ', 'üßü', 'üéÉ'];
//     this.skin = skins[Math.floor(Math.random() * skins.length)];
//   }

//   moveLeft() {
//     // –ò–¥—ë–º –≤–ª–µ–≤–æ.
//     this.position -= 1;
//   }

//   die() {
//     this.position = '?';
//     this.skin = 'üí©';
//     console.log('Enemy is dead!');
//   }
// }

// module.exports = Enemy;


const Boomerang = require("./Boomerang");

class Enemy {
  constructor({ position = 10 } = {}) {
    this.generateSkin();
    this.position = position; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –≤—Ä–∞–≥–∞
  }

  generateSkin() {
    const skins = [
      "üëæ",
      "üíÄ",
      "üëπ",
      "üëª",
      "üëΩ",
      "üëø",
      "üí©",
      "ü§°",
      "ü§∫",
      "üßõ",
      "üßü",
      "üéÉ",
    ];
    this.skin = skins[Math.floor(Math.random() * skins.length)];
  }

  drawBoard(board) {
    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏
    console.clear();
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–æ—Å–∫–∏ —Å –≤—Ä–∞–≥–æ–º
    console.log(board);
  }

  async moveLeft(board) {
    const delay = 300; // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–≤–∏–∂–µ–Ω–∏—è–º–∏
    const boomerang = new Boomerang(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Boomerang

    while (this.position > 0) {
      const updatedBoard = board.split("");
      updatedBoard[this.position] = " ";
      this.position -= 1;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤—Ä–∞–≥–∞ —Å –ø–æ–∑–∏—Ü–∏–µ–π Boomerang
      if (this.position === boomerang.position) {
        await this.die();
        return;
      }

      updatedBoard[this.position] = this.skin;
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É
      const newBoard = updatedBoard.join("");
      // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –¥–æ—Å–∫—É
      this.drawBoard(newBoard);

      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
      await new Promise((resolve) => setTimeout(resolve, delay));
    }
  }

  async die() {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–º–µ—Ä—Ç—å—é –≤—Ä–∞–≥–∞
    await new Promise((resolve) => setTimeout(resolve, 300));
    this.position = -1; // –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è "–º–µ—Ä—Ç–≤"
    console.log("BASTED");
  }
}

(async () => {
  const board = "          "; // –î–æ—Å–∫–∞ –∏–∑ 10 –ø—Ä–æ–±–µ–ª–æ–≤
  const enemy = new Enemy();
  console.log("Initial board:");
  enemy.drawBoard(board);
  await enemy.moveLeft(board);
});

module.exports = Enemy;